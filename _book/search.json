[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Proteinlerin Moleküler Dinamik Simülasyonları",
    "section": "",
    "text": "Moleküler dinamik simülasyonları fizik, kimya, moleküler biyoloji, eczacılık, tıp ve biyomühendislik gibi çeşitli alanlarda kullanılan bilişimsel bir araştırma tekniğidir. Bu tekniğin geniş bir uygulama alanı olmasında rağmen bu alandaki Türkçe kaynak sayısı oldukça azdır. Bu nedenle, bu kitapta proteinlerin moleküler dinamik (MD) simülasyonlarını pratik bir yaklaşımla ele alacağız. Kitapta ağırlıklı olarak MD simülasyonlarının açık kaynak kodlu Gromacs paketi ile yapılması hedeflenmektedir. Kitap, kısa bir teorik temeller bölümü ile başlayacaktır. Teorik temeller bölümünden sonra MD simülasyonlarına hazırlık aşamaları anlatılacaktır. Son bölümde ise MD simülasyonu analiz teknikleri sunulacaktır. Kitabın teorik bilgilerle dolu bir kitap olmasından ziyade pratik bir uygulama kitabı olması hedeflenmektedir. Kitabın, bu alanda araştırma yapmak isteyen ancak yabancı dildeki kaynaklardan henüz tam yararlanamayan ileri lisans öğrencileri ve lisansüstü öğrenciler için faydalı olacağını ümit ediyorum.\n📥 Kitabı PDF olarak indir: Proteinlerin Moleküler Dinamik Simülasyonları (PDF)\nBaşlamak için Teorik Temeller bölümüne göz atın.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Önsöz</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html",
    "href": "chapters/01-intro.html",
    "title": "2  Teorik Temeller",
    "section": "",
    "text": "2.1 Bu Bölümde Neler Öğreneceğiz?\nBu bölümde moleküler dinamik simülasyonlarının temel kavramlarını ele alacağız.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#moleküler-dinamik-simülasyonları-nedir",
    "href": "chapters/01-intro.html#moleküler-dinamik-simülasyonları-nedir",
    "title": "2  Teorik Temeller",
    "section": "2.2 Moleküler Dinamik Simülasyonları Nedir?",
    "text": "2.2 Moleküler Dinamik Simülasyonları Nedir?\nMoleküler dinamik (MD) simülasyonları, atomik ölçekteki sistemlerin zaman içindeki hareketlerini bilgisayar aracılığıyla incelemeye olanak sağlayan güçlü bir yöntemdir. Temel fikir, doğada var olan parçacıkları sayısal olarak temsil etmek ve onların birbirleriyle etkileşimlerini bilgisayar üzerinde adım adım takip etmektir. Böylece laboratuvarda gözlenmesi zor veya imkânsız olan süreçler sanal ortamda canlandırılabilir.\nMD simülasyonlarını cazip kılan noktalardan biri, karmaşık sistemlerin dinamiklerini doğrudan izleyebilmemizdir. Deneysel yöntemler genellikle bu süreçleri anlık görüntüler hâlinde sunarken, MD simülasyonları bize tüm zaman çizgisini ayrıntılı olarak verir.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#tarihsel-arka-plan",
    "href": "chapters/01-intro.html#tarihsel-arka-plan",
    "title": "2  Teorik Temeller",
    "section": "2.3 Tarihsel Arka Plan",
    "text": "2.3 Tarihsel Arka Plan\nMoleküler dinamik yöntemleri ilk olarak 1950’lerin sonunda, bilgisayarların henüz oldukça sınırlı kapasitelere sahip olduğu dönemde geliştirilmiştir. Başlangıçta birkaç düzine atomdan oluşan sistemler üzerinde uygulanan bu teknik, bilgisayar gücündeki olağanüstü gelişmeler sayesinde günümüzde milyonlarca atom içeren biyolojik komplekslere kadar genişletilebilmiştir.\nBu ilerleme yalnızca hesaplama gücündeki artışla değil, aynı zamanda kuvvet alanlarının, algoritmaların ve yazılımların gelişmesiyle de mümkün olmuştur. Bugün MD, ilaç tasarımından nanoteknolojiye kadar pek çok alanda vazgeçilmez bir araçtır.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#temel-mantık",
    "href": "chapters/01-intro.html#temel-mantık",
    "title": "2  Teorik Temeller",
    "section": "2.4 Temel Mantık",
    "text": "2.4 Temel Mantık\nBir MD simülasyonu, kabaca üç aşamadan oluşur:\n\nBaşlangıç Modelinin Hazırlanması\nÇalışılmak istenen sistemin atomik koordinatları tanımlanır. Bu bir proteinin yapısı, bir polimer zinciri ya da basit bir sıvı karışımı olabilir.\nSistemin Enerjisinin Belirlenmesi\nAtomlar arası etkileşimleri tanımlayan “kuvvet alanı” seçilir. Kuvvet alanı atomlar arası etkileşmelerin hesaplanabilmesi için ihtiyaç duyacağımız parametreler setidir. Bu parametre seti kullanılarak, öncelikle sistemin toplam enerjisi jesaplanır.\nEtki Eden Kuvvetlerin Belirlenmesi\nKorunumlu kuvvetlerin olduğu bir sistemde enerji bilinirse her atom üzerine etki eden kuvvetler hesaplanabilir.\nEtki Eden İvmelerin Belirlenmesi\nEğer bir atoma etkiyen net kuvvet bilinirse F=ma denklemi ile ona etkiye ivme hesaplanabilir.\nZamanın Çok Küçük Adımlarlar İlerletilmesi\nİvme bilinirse hızı hesaplamak sadece temel fizik denklemlerinin uygulanmasıdır. Hız kullanılarak küçük bir zaman dilimi sonrasındaki (dt: genellikle bir kaç femtosaniye) konumlar hesaplanabilir. Konumlar güncellendiği için sistemin enerjisi artık değişmiştir. Bu durumda tekrar 2. adıma gidip bu döngüyü tekrarlamak gerekir. Gündelik hayatta SI birim sistemine göre en küçük zaman birimi saniyedir. Ancak MD simülasyonlarında femtosaniye zaman birimi yaygın olarak kullanılır. Femtosaniye, pikosaniye, nanosaniye, mikrosaniye, milisaniye ve saniye zaman birimleri arasındaki ilişki aşağıdaki tabloda gösterilmiştir.\nAşağıdaki tablo, saniyenin alt katmanlarındaki birimlerin birbirine ve saniyeye göre büyüklüklerini göstermektedir.\n\n\n\n\n\n\n\n\n\n\nBirim Adı\nSembol\n1 Birimin Saniye Cinsinden Değeri\n1 Saniyede Kaç Tane\nAçıklama\n\n\n\n\nFemtosaniye\nfs\n10⁻¹⁵ s\n1 000 000 000 000 000\n1 saniyenin katrilyonda biri\n\n\nPikosaniye\nps\n10⁻¹² s\n1 000 000 000 000\n1 saniyenin trilyonda biri\n\n\nNanosaniye\nns\n10⁻⁹ s\n1 000 000 000\n1 saniyenin milyarda biri\n\n\nMikrosaniye\nµs\n10⁻⁶ s\n1 000 000\n1 saniyenin milyonda biri\n\n\nMilisaniye\nms\n10⁻³ s\n1 000\n1 saniyenin binde biri\n\n\nSaniye\ns\n1 s\n1\nSI temel zaman birimi\n\n\n\n\nDönüşüm Örnekleri\n\n1 ns = 1000 ps\n\n1 µs = 1000 ns\n\n1 ms = 1000 µs\n\n1 s = 1000 ms\n\n\n\nps[“Pikosaniye (10⁻¹²)”] ps –&gt; ns[“Nanosaniye (10⁻⁹)”] ns –&gt; µs[“Mikrosaniye (10⁻⁶)”] µs –&gt; ms[“Milisaniye (10⁻³)”] ms –&gt; s[“Saniye (1)”]\n— –&gt;\n\nBu adımların yinelenmesiyle sistemin dinamikleri elde edilir. Ortaya çıkan veriler, sonrasında analiz edilerek anlamlı bilimsel sonuçlara dönüştürülür.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#güçlü-ve-zayıf-yönler",
    "href": "chapters/01-intro.html#güçlü-ve-zayıf-yönler",
    "title": "2  Teorik Temeller",
    "section": "2.5 Güçlü ve Zayıf Yönler",
    "text": "2.5 Güçlü ve Zayıf Yönler\nGüçlü Yanlar:\n\nAtomik çözünürlükte ayrıntı sağlar.\n\nDeneylerde gözlenemeyen süreçler gözlenebilir.\n\nKoşullar kolayca değiştirilebilir (sıcaklık, basınç, iyon derişimi).\n\nZayıf Yanlar:\n\nErişilebilen zaman ölçeği sınırlıdır (mikro–milisaniyeler).\n\nKuvvet alanları belirli yaklaşımlara dayanır, kuantum mekaniksel fiziği tam olarak yansıtmayabilir.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#neden-önemli",
    "href": "chapters/01-intro.html#neden-önemli",
    "title": "2  Teorik Temeller",
    "section": "2.6 Neden Önemli?",
    "text": "2.6 Neden Önemli?\nMoleküler dinamik simülasyonlarının önemi, deneysel verilerle tamamlayıcı bir ilişki kurabilmesinde yatmaktadır.\n\nDeneyler bize makroskopik gözlemler sunarken, MD simülasyonları bu gözlemlerin ardındaki atomik ayrıntıları ortaya çıkarır.\nProtein kristal yapıları bize “donmuş” bir görüntü verir; MD ise bu yapının esnekliğini ve hareketliliğini gösterir.\nMalzeme testleri bir polimerin dayanıklılığını ölçebilir; MD ise polimer zincirlerinin kırılma mekanizmasını açıklayabilir.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#sonuç",
    "href": "chapters/01-intro.html#sonuç",
    "title": "2  Teorik Temeller",
    "section": "2.7 Sonuç",
    "text": "2.7 Sonuç\nMoleküler dinamik simülasyonları, modern bilimin en güçlü mikroskoplarından biri gibidir: Atomların dünyasına benzersiz bir pencere açar. Elbette her mikroskop gibi sınırlamaları vardır; ancak doğru kullanıldığında hem biyolojide hem de malzeme biliminde olağanüstü katkılar sağlar.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/01-intro.html#bölüm-özeti",
    "href": "chapters/01-intro.html#bölüm-özeti",
    "title": "2  Teorik Temeller",
    "section": "2.8 Bölüm Özeti",
    "text": "2.8 Bölüm Özeti",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Teorik Temeller</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html",
    "href": "chapters/02-md-preparations.html",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "",
    "text": "3.1 Bu Bölümde Neler Öğreneceğiz?\nBu bölümde moleküler dinamik simülasyonlarının temel aşamalarını ele alacağız. Kabaca bir moleküler dinamik simülasyonunun hazırlık aşamaları aşağıdaki basamakları içerir:\nBu basamakları teker teker ele alalım. Ancak herşeyden önce en temel yazılımlarla, yani protein görselleştirme yazılımları ile başlayalım.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html#bu-bölümde-neler-öğreneceğiz",
    "href": "chapters/02-md-preparations.html#bu-bölümde-neler-öğreneceğiz",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "",
    "text": "Sistemin inşa edilmesi\nSistemin enerjisinin minimize edilmesi\nSistemin dengelenmesi (equilibration)\nÜretim aşaması",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html#protein-görselleştirme-programları",
    "href": "chapters/02-md-preparations.html#protein-görselleştirme-programları",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "3.2 Protein Görselleştirme Programları",
    "text": "3.2 Protein Görselleştirme Programları\nProtein yapılarının kullanıldığı bütün araştırmalarda en temel ihtiyaçlardan bir tanesi protein yapısının görselleştirilmesidir. Bu nedenle yaygın olarak kullanılan çeşitli programlar geliştirilmiştir. Moleküler dinamik simülasyonları için de bu yazılımlar olmazsa olmazdır. Bu kitabın yazarı Pymol ve ChimeraXprotein görselleştirme yazılımlarını kullanmakta ve okuyucularına tavsiye etmektedir. Bu iki yazılımın dışında, özellikle moleküler dinamik simülasyon yörünge dosyalarının görüntülenmesi için VMD yazılımı da kurulmalıdır.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html#gromacs-programının-kurulması",
    "href": "chapters/02-md-preparations.html#gromacs-programının-kurulması",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "3.3 Gromacs programının kurulması",
    "text": "3.3 Gromacs programının kurulması\nGromacs açık kaynak kodlu bir yazılımdır ve şu adresten indirilebilir: https://manual.gromacs.org/current/download.html\nEğer Ubuntu Linux kullanıyorsanız aşağıdaki komut Gromacs’ı sizin için kuracaktır:\nsudo apt install gromacs",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html#sistemin-inşa-edilmesi",
    "href": "chapters/02-md-preparations.html#sistemin-inşa-edilmesi",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "3.4 Sistemin inşa edilmesi",
    "text": "3.4 Sistemin inşa edilmesi\nSistemin doğru bir biçimde inşa edilmesi için adım adım ilerlemek gerekir: 1. Proteinin hazırlanması 3. Sisteme solvent eklenmesi 4. Sisteme doğal ortam iyonlarının eklenmesi\n\n3.4.1 Proteinin hazırlanması\nHedef protein yapısının bulunması, temizlenmesi ve eksik (ise) hidrojenlerin eklenmesi ve doğru protonasyon durumlarının belirlenmesi için aşağıdaki adımlar uygulanır:\n\ninitial_pdb=AF-P22303-F1-model_v4\n\nfile_prefix=aces_human_monomer_wt\n\nforce_field=amber99sb-ildn\n\n#Call pdb2pqr to determine protonation states of the residues\n#according to pH 7.4\npdb2pqr30 --ff PARSE --ffout AMBER  --titration-state-method\\\n    propka --with-ph 7.4 ${initial_pdb}.pdb \\\n    ${initial_pdb-pwb2pqr30.pqr \\\n    --pdb-output ${initial_pdb}-pwb2pqr30.pdb\n\n#Add hydrogens if absent, select water model and force field\ngmx pdb2gmx -f ${initial_pdb}-pwb2pqr30.pdb \\\n    -o ${file_prefix}_processed.pdb \\\n    -water ${solvent_model} -ff ${force_field} -ignh\n\n\n\n3.4.2 Sisteme solvent eklenmesi\nProteinler genellikle su ortamında işlevlerini yerine getirir. Bu nedenle bir simülasyon yaparken sisteme mutlaka su eklenmesi gerekir. Aşağıdaki bash komutları ile sisteme su ekleyebiliriz.\n\nbuffer=1.1\n\n#Define box properties\ngmx editconf -f ${file_prefix}_processed.pdb \\\n    -o ${file_prefix}_newbox.pdb \\\n    -bt octahedron -c -d ${buffer} -princ\n\n#Note that if spc, spce, or tip3p model is used, solvent_model=spc216\nsolvent_model=tip3p\n\n#Produce box\nif [ \"$solvent_model\" == \"tip3p\" ] || \\\n    [ \"$solvent_model\" == \"spc\" ] || \\\n    [ \"$solvent_model\" == \"spce\" ];\nthen\n    gmx solvate -cp ${file_prefix}_newbox.pdb -cs spc216.gro \\\n        -o ${file_prefix}_solv.pdb -p topol.top\nfi\n\nif [ \"$solvent_model\" == \"tip4p\" ];\nthen\n    gmx solvate -cp ${file_prefix}_newbox.pdb -cs tip4p.gro \\\n        -o ${file_prefix}_solv.pdb -p topol.top\nfi\n\n\n3.4.3 Sisteme doğal ortam iyonlarının eklenmesi\nAşağıdaki komut sisteme Na ve Cl iyonlarını ekleyip sistemin toplam yükünü sıfır yapacaktır. Sisteme iyonlar eklenirken 0.15 Molar konsantrasyon da sağlanmaya çalışılacaktır.\n#Prepare for ion addition\ngmx grompp -f ions2.mdp -c ${file_prefix}_solv.pdb -maxwarn 2 \\\n    -p topol.top -o ions.tpr\n\n#Produce and place ions\ngmx genion -s ions.tpr -o ${file_prefix}_solv_ions.pdb \\\n    -p topol.top -pname NA -nname CL -neutral -conc 0.15\n\n#Good news: Preparation is over!\n#Bad news : Trouble has just started!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/02-md-preparations.html#bölüm-özeti",
    "href": "chapters/02-md-preparations.html#bölüm-özeti",
    "title": "3  Gromacs ile MD Simülasyonlarına Hazırlık",
    "section": "3.5 Bölüm Özeti",
    "text": "3.5 Bölüm Özeti",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gromacs ile MD Simülasyonlarına Hazırlık</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html",
    "href": "chapters/03-md-execution.html",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "",
    "text": "4.1 Bu Bölümde Neler Öğreneceğiz?\nBu bölümde moleküler dinamik simülasyonları çalıştırmanın temel aşamalarını ele alacağız. Tüm çalıştırma aşamalarından önce grompp (gromacs preprocessor) programını çalıştırıp tpr uzantılı bir dosya elde etmek gerekir.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html#enerji-minimizasyonu",
    "href": "chapters/03-md-execution.html#enerji-minimizasyonu",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "4.2 Enerji minimizasyonu",
    "text": "4.2 Enerji minimizasyonu\nHazırladığımız sistemde birbirine aşırı yakın parçacıklar olabilir. Bunların birbirinden uzaklaştırılması ve parçaçıklarının belirli bir denge konumuna getirilmesi gerekir. Bunun için sistemin toplam enerjisinin minimize edilmesi gerekir. Bu aşamada parçacıklara herhangi bir hız atanmadığı akılda tutulmalıdır.\n\ngmx grompp -f minim.mdp -c protein.pdb -p topologyFile.top -o em.tpr\ngmx mdrun -v -deffnm em",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html#dengeleme-simülasyonları",
    "href": "chapters/03-md-execution.html#dengeleme-simülasyonları",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "4.3 Dengeleme simülasyonları",
    "text": "4.3 Dengeleme simülasyonları\nDengeleme simülasyonları Gromacs içerisinde iki aşamada yapılır: 1. NVT dengeleme: Bu aşamada sistemin parçacık sayısı (N), hacmi (V) ve sıcaklığı (T) sabit tutulur. Burada, önceki aşamanın sonunda üretilen em.gro dosyasını input olarak kullanacağız. Minimizasyon dosyasına ek olarak NVT dengelemesi sırasında Gromacs tarafından kullanılacak olan nvt.mdp input dosyasına da ihtiyacımız olacaktır.\n\ngmx grompp -f nvt.mdp -c em.gro -p topologyFile.top -r em.gro -o nvt.tpr\ngmx mdrun -v -deffnm nvt\n\n\nNPT dengeleme: Bu aşamada sistemin parçacık sayısı (N), basıncı (P) ve sıcaklığı (T) sabit tutulur.\n\n\ngmx grompp -f npt.mdp -c nvt.gro -r nvt.gro -t nvt.cpt -p topologyFile.top -o npt.tpr\ngmx mdrun -v -deffnm npt",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html#üretim-simülasyonları",
    "href": "chapters/03-md-execution.html#üretim-simülasyonları",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "4.4 Üretim simülasyonları",
    "text": "4.4 Üretim simülasyonları\nMD simülasyonunun son aşaması olan üretim simülasyonları, genellikle analizini yapacağımız yörünge ve enerji dosyalarının üretildiği aşamadır. Aslında NPT simülasyonları ile çok benzer parametrelere sahiptir ancak NPT simülasyonlarına göre çok daha uzundur. Aşağıdaki komut üretim simülasyonlarını başlatacaktır.\n\ngmx grompp -f run.mdp -c npt.gro -t npt.cpt -p topologyFile.top -o prod-sim1.tpr\ngmx mdrun -v -deffnm prod-sim1\n\nEğer üretim aşaması simülasyonunuz herhangi bir sebeple yarıda kesilirse, aşağıdaki komut ile kaldığı yerden devam edebilirsiniz.\n\ngmx mdrun -v -s prod-sim1.tpr -cpi prod-sim1.cpt -deffnm prod-sim1\n\nMD simülasyonunuz bittikten sonra simülasyon süresinin uzatılması gerektiğini farkedebiliriz. Bu durumda Gromacs içindeki \\(extend\\) parametresinden yararlanabiliriz. Aşağıdaki komut simülasyonu 75 nanosaniye (75000 pikosaniye) uzatmak için yeni bir tpr dosyası oluşturacaktır. Bu yeni tpr kullanılarak simülasyon, kaldığı yerden devam ettirilebilir.\n\ngmx convert-tpr -s prod-sim1.tpr -extend 75000 -o prod-sim1-extended.tpr\ngmx mdrun -v -s prod-sim1-extended.tpr -cpi prod-sim1.cpt -deffnm prod-sim1\n\nTüm bilimsel çalışmalarda olduğu gibi MD simülasyonlarını da bir kaç kere tekrarlamak gerekir. Bu, bilimsel çalışmanın tekrarlanabilirliğini ispat etmek için olmazsa olmaz bir şeydir.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html#yüksek-başarımlı-hesaplama-sistemleri",
    "href": "chapters/03-md-execution.html#yüksek-başarımlı-hesaplama-sistemleri",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "4.5 Yüksek başarımlı hesaplama sistemleri",
    "text": "4.5 Yüksek başarımlı hesaplama sistemleri\nMD simülasyonları çok sayıda işlemciye veya ekran kartına ihtiyaç duyulan uzun hesaplamalardır. Bu nedenle bir masaüstü bilgisayar yerine yüksek başarımlı hesaplama sistemlerinin kullanılması daha uygundur. Ülkemizde bu açıdan en iyi kaynaklardan biri Ulakbim tarafında sağlanan TRUBA-TRGrid hizmetidir. Bu hizmetten yararlanmak için şu web sitesini ziyaret edebilirsiniz: https://portal.truba.gov.tr/",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/03-md-execution.html#bölüm-özeti",
    "href": "chapters/03-md-execution.html#bölüm-özeti",
    "title": "4  MD Simülasyonlarını Çalıştırma",
    "section": "4.6 Bölüm Özeti",
    "text": "4.6 Bölüm Özeti",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>MD Simülasyonlarını Çalıştırma</span>"
    ]
  },
  {
    "objectID": "chapters/04-md-analyses.html",
    "href": "chapters/04-md-analyses.html",
    "title": "5  MD Simülasyon Analizleri",
    "section": "",
    "text": "5.1 Bu Bölümde Neler Öğreneceğiz?\nBu bölümde MD simülasyonlarının analizleri için kullanılan bazı standart teknikler anlatılacaktır. Bu analiz teknikleri yapısal ve enerji analizleri olarak ikiye ayrılabilir. Ele alacağımız yapısal analiz teknikleri şunlardır: RMSD, RMSF, Rg,SASA, ikincil yapı, PCA.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>MD Simülasyon Analizleri</span>"
    ]
  },
  {
    "objectID": "chapters/04-md-analyses.html#yapısal-analizler",
    "href": "chapters/04-md-analyses.html#yapısal-analizler",
    "title": "5  MD Simülasyon Analizleri",
    "section": "5.2 Yapısal Analizler",
    "text": "5.2 Yapısal Analizler\nMoleküler dinamik (MD) simülasyonları, atomik düzeyde bir sistemin zaman içindeki davranışını incelememizi sağlar.\nBu tür simülasyonlarda elde edilen sonuçların anlamlı şekilde yorumlanabilmesi için çeşitli yapısal analiz yöntemleri kullanılır. Yapısal analizleri gerçekleştirebilmeniz için elimizde bir topoloji dosyası (genellikle gro, pdb veya tpr formatında) ve bir yörünge dosyası (xtc veya trr formatında) bulunması gerekir.\n\n5.2.1 RMSD (Root Mean Square Deviation)\nRMSD (Root Mean Square Deviation), bir molekülün belirli bir referans yapısına göre ortalama konum değişimini nicel olarak ölçen bir metriktir.\nBasitçe ifade etmek gerekirse, RMSD zaman içinde yapının ne kadar değiştiğini gösterir.\nMatematiksel olarak RMSD şöyle tanımlanır:\n\\[\nRMSD = \\sqrt{ \\frac{1}{N} \\sum_{i=1}^{N} (\\mathbf{r}_i(t) - \\mathbf{r}_i^{ref})^2 }\n\\]\nBurada:\n\n\\(N\\): Karşılaştırılan atom sayısıdır.\n\n\\(\\mathbf{r}_i(t)\\): Zaman \\(t\\)’deki i. atomun koordinatıdır.\n\n\\(\\mathbf{r}_i^{\\text{ref}}\\): Referans yapıdaki i. atomun koordinatıdır.\n\n\n5.2.1.1 RMSD’nin Anlamı\nRMSD değeri bize sistemin yapısal kararlılığı hakkında bilgi verir:\n\n\n\nRMSD Değeri\nYorum\n\n\n\n\n0 – 1 Å\nYapı referansa çok benzer; yüksek kararlılık\n\n\n1 – 3 Å\nKüçük yapısal değişiklikler; olası uyum veya gevşeme\n\n\n&gt; 3 Å\nBelirgin yapısal değişim veya konformasyonel geçiş\n\n\n\n\n💡 RMSD’nin tek başına bir ölçüt olmadığı unutulmamalıdır.\nYüksek RMSD değeri her zaman sistemin dengesiz olduğu anlamına gelmez; yapının farklı ama kararlı bir konformasyona geçmesi de mümkündür.\n\n\n\n\n5.2.1.2 Referans Yapı Seçimi\nRMSD analizinde kullanılacak referans yapı son derece önemlidir.\nGenellikle aşağıdaki seçeneklerden biri tercih edilir:\n\nBaşlangıç yapısı (örneğin enerji minimizasyon sonrası yapı)\n\nZaman ortalaması alınmış yapı\n\nKristal yapı veya deneysel referans\n\nHer durumda, RMSD hesaplanmadan önce hizalama (alignment) yapılmalıdır.\nBu hizalama genellikle Cα (alfa karbon) veya backbone atomları üzerinden gerçekleştirilir.\n\n\n5.2.1.3 Gromacs ile RMSD hesaplama\necho 3 3 | gmx rms -s pdb_filename -f traj_filename -o rmsd.xvg -tu ns\n\n\n\n5.2.2 RMSF (Root Mean Squared Fluctuations):\nRMSF (Root Mean Square Fluctuation), moleküler dinamik (MD) simülasyonlarında her bir atomun veya rezidünün zaman içindeki ortalama konum dalgalanmasını ölçen bir metriktir. Bu analiz, yapının hangi bölgelerinin esnek, hangi bölgelerinin daha rijit olduğunu anlamak için kullanılır.\n\n\n5.2.2.1 RMSF Tanımı\nHer bir atom veya rezidü için RMSF değeri şu şekilde hesaplanır:\n\\[\n\\text{RMSF}_i = \\sqrt{ \\left\\langle \\left( \\mathbf{r}_i(t) - \\langle \\mathbf{r}_i \\rangle \\right)^2 \\right\\rangle_t }\n\\]\nBurada:\n- \\(\\mathbf{r}_i(t)\\): Zaman \\(t\\)’deki i. atomun koordinatıdır.\n- \\(\\langle \\mathbf{r}_i \\rangle\\): Tüm simülasyon süresince i. atomun ortalama konumudur.\n- \\(\\langle \\cdots \\rangle_t\\): Zaman ortalamasını ifade eder.\n\n\n\n5.2.2.2 RMSF’nin Yorumu\n\nDüşük RMSF değerleri (0–1 Å): Bölge katıdır, genellikle protein çekirdeği veya ikincil yapı elementleri (örneğin α-heliks, β-tabaka).\n\nYüksek RMSF değerleri (2–5 Å ve üzeri): Bölge esnektir, genellikle loop, uç kısımlar veya bağlanma bölgeleri.\n\n\n\n\n5.2.2.3 Gromacs ile RMSF Hesaplama\necho 3 3 | gmx rmsf -s pdb_filename -f traj_filename -res -oq rmsf.pdb\n\n\n\n\n5.2.3 Radius of Gyration (Rg) Analizi\nRadius of Gyration (Rg), bir molekülün kütle merkezine göre atomlarının ne kadar dağılmış olduğunu ölçen bir metriktir. Proteinlerde Rg genellikle kompaktlık, katlanma durumu ve kararlılık hakkında bilgi verir. Radius of gyration şu şekilde tanımlanır:\n\\[\nR_g = \\sqrt{ \\frac{ \\sum_{i=1}^{N} m_i \\left| \\mathbf{r}_i - \\mathbf{r}_{\\text{km}} \\right|^2 }{ \\sum_{i=1}^{N} m_i } }\n\\]\nBurada:\n\n\\(m_i\\): i. atomun kütlesi,\n\n\\(\\mathbf{r}_i\\): i. atomun koordinatı,\n\n\\(\\mathbf{r}_{\\text{km}}\\): sistemin kütle merkezidir,\n\n\\(N\\): toplam atom sayısıdır.\n\n\n\n\n\n\n\n\nRg Değeri\nYorum\n\n\n\n\nDüşük Rg (örneğin 15 Å)\nProtein kompakt, katlanmış durumda\n\n\nYüksek Rg (örneğin 25 Å)\nProtein genişlemiş veya kısmen açılmış durumda\n\n\n\n\n💡 Zaman içinde Rg’nin sabit kalması sistemin katlanma kararlılığını,\ndüzenli artması ise açılmayı (unfolding) gösterebilir.\n\n\n\n5.2.3.1 Gromacs ile Rg Hesaplama\necho 3 3| gmx gyrate -s pdb_filename -f traj_filename -o gyrate.xvg\n\n\n\n5.2.4 SASA (Solvent Accessible Surface Area):\nSASA (Solvent Accessible Surface Area), bir molekülün çözücü (genellikle su) tarafından erişilebilir yüzey alanını ifade eder.\nBu kavram, proteinlerin hidrofobik ve hidrofilik yüzey özelliklerini, katlanma davranışlarını ve ligand bağlanma bölgelerinin analizini anlamada önemli bir ölçüttür.\nBir molekülün SASA’sı, hayali bir çözücü küresi (örneğin su molekülü için yarıçapı yaklaşık 1.4 Å) kullanılarak hesaplanır. Bu küre, molekülün atomları etrafında “yuvarlanır” ve çözücünün temas edebileceği yüzey alanı ölçülür.\nSASA değeri, genellikle şu iki katkının toplamıdır:\n\\[\nSASA_{\\text{total}} = SASA_{\\text{polar}} + SASA_{\\text{apolar}}\n\\]\n\n\\(SASA_{\\text{polar}}\\): Hidrofilik (kutupsal) atomların oluşturduğu yüzey alanı,\n\n\\(SASA_{\\text{apolar}}\\): Hidrofobik (apolar) atomların oluşturduğu yüzey alanı.\n\n\n\n5.2.4.1 SASA Hesaplama Yöntemi\nSASA tipik olarak Lee–Richards algoritması (1971) veya Shrake–Rupley yöntemi (1973) kullanılarak hesaplanır.\nBu yöntemlerde atomlar Van der Waals yarıçapına sahip küreler olarak temsil edilir.\nBir çözücü küresi bu yüzeyde gezdirilerek toplam erişilebilir alan sayısal olarak bulunur.\n\n💡 Basitleştirilmiş fikir:\nSu molekülü, proteinin etrafında “kayarken” hangi atomlara temas edebiliyorsa, o atomlar SASA’ya katkı yapar.\n\n\n\n\n5.2.4.2 SASA ve Yapısal Özellikler\nSASA değeri proteinlerin katlanma durumu ve kararlılığı hakkında güçlü ipuçları verir:\n\n\n\n\n\n\n\n\nGözlenen Durum\nSASA Davranışı\nYorum\n\n\n\n\nKatlanmış protein\nSASA düşük\nHidrofobik bölgeler iç kısımda, çözücüden korunmuş\n\n\nAçılmış protein\nSASA yüksek\nHidrofobik bölgeler açığa çıkmış\n\n\nLigand bağlanması\nSASA azalır\nBağlanma bölgesinde çözücü erişimi kısıtlanır\n\n\n\n\n\n5.2.4.3 Gromacs ile SASA Analizi\necho 1|gmx sasa -s pdb_filename -f traj_filename -o sasa.xvg -tu ns\n\n\n\n5.2.5 İkincil Yapı",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>MD Simülasyon Analizleri</span>"
    ]
  },
  {
    "objectID": "chapters/04-md-analyses.html#enerji-analizleri",
    "href": "chapters/04-md-analyses.html#enerji-analizleri",
    "title": "5  MD Simülasyon Analizleri",
    "section": "5.3 Enerji Analizleri",
    "text": "5.3 Enerji Analizleri",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>MD Simülasyon Analizleri</span>"
    ]
  },
  {
    "objectID": "chapters/04-md-analyses.html#bölüm-özeti",
    "href": "chapters/04-md-analyses.html#bölüm-özeti",
    "title": "5  MD Simülasyon Analizleri",
    "section": "5.4 Bölüm Özeti",
    "text": "5.4 Bölüm Özeti",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>MD Simülasyon Analizleri</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "",
    "text": "6.1 Giriş\nProteinler, canlılığın iş yapan makromolekülleridir. Kataliz (enzimler), taşıma (hemoglobin), savunma (antikorlar), sinyal iletimi (reseptörler) ve yapı (keratin, kollajen) gibi pek çok görevi üstlenirler. Tüm bu çeşitliliğin ortak kökeni amino asitlerdir—yani proteinlerin temel yapıtaşları.\nBu bölümde önce amino asitlerin ortak mimarisini ve kimyasal çeşitliliğini özetleyecek, ardından proteinlerin birincil, ikincil, tersiyer ve kuaterner yapı düzeylerini anlaşılır bir dille ele alacağız. Bölüm denklem içermez; kavramsal bir çerçeve sunar.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html#amino-asitler",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html#amino-asitler",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "6.2 Amino Asitler",
    "text": "6.2 Amino Asitler\nHer amino asit, aynı omurgayı paylaşır: bir amino grubu (–NH₂), bir karboksil grubu (–COOH), kiral bir alfa karbonu (Cα) ve değişken yan zincir (R grubu). R grubu; polar/apolar olma, yük taşıma, aromatiklik veya kükürt içeriği gibi özellikleriyle amino asitlerin kimyasal davranışını belirler.\n\nApolar (hidrofobik): Val, Leu, Ile, Met, Ala, Phe, Trp, Pro\n\nPolar yüksüz: Ser, Thr, Asn, Gln, Tyr, Cys\n\nAsidik (negatif yüklü): Asp, Glu\n\nBazik (pozitif yüklü): Lys, Arg, His\n\nYan zincirlerin bu çeşitliliği, proteinlerin katlanma dinamiklerinden etkileşim ağlarına kadar her şeyi etkiler.\n\n\n\n\n\n\nŞekil 6.1: Amino asidin genel yapısı\n\n\n\nTODO: Şekil 6.1’yi düzeltmeyi unutma. !!!",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html#proteinlerin-yapı-düzeyleri",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html#proteinlerin-yapı-düzeyleri",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "6.3 Proteinlerin Yapı Düzeyleri",
    "text": "6.3 Proteinlerin Yapı Düzeyleri\nProtein yapısını kavramak için dört düzeyi ayırt ederiz:\n\nBirincil yapı (primary): Amino asitlerin doğrusal dizilimi (sekans).\n\nİkincil yapı (secondary): Yerel düzenli motifler — α-heliks ve β-tabaka gibi.\n\nTersiyer yapı (tertiary): Tek zincirin üç boyutlu, işlevsel katlanmış hali.\n\nKuaterner yapı (quaternary): Birden fazla polimer zincirinin (alt birimlerin) bir araya gelerek oluşturduğu kompleks.\n\nBu düzeyler hiyerarşiktir: Sekans, ikincil motif eğilimlerini belirler; yan zincir etkileşimleri (hidrofobik paketleme, hidrojen bağları, tuz köprüleri, aromatik etkileşimler, disülfit bağları) tersiyer mimariyi şekillendirir; uygun arayüzler ise kuaterner etkileşimleri mümkün kılar.\n\n\n\n\n\n\nŞekil 6.2: Yapı düzeylerinin şematik gösterimi\n\n\n\nTODO: Şekil 6.2’yi düzeltmeyi unutma. !!!",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html#protein-yapısı-belirleme-yöntemleri",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html#protein-yapısı-belirleme-yöntemleri",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "6.4 Protein Yapısı Belirleme Yöntemleri",
    "text": "6.4 Protein Yapısı Belirleme Yöntemleri\nProteinlerin üç boyutlu yapısını anlamak, biyolojik işlevlerini çözümlemek için temel bir gerekliliktir. Bir proteinin dizisi (birincil yapısı) genomdan doğrudan elde edilebilir, ancak bu dizinin nasıl katlanarak üç boyutlu bir yapıya dönüştüğünü bilmek için ek yöntemlere ihtiyaç vardır. Bu yöntemler iki ana başlık altında toplanabilir: deneysel yöntemler ve teorik yöntemler.\n\n6.4.1 Deneysel Yöntemler\n\n6.4.1.1 X-ışını Kristalografisi\nX-ışını kristalografisi, protein yapısını çözmek için uzun yıllardır kullanılan “altın standart” yöntemdir. Protein kristallerinden elde edilen kırınım desenleri analiz edilerek atomların üç boyutlu yerleşimi ortaya çıkarılır.\n- Avantajı: Yüksek çözünürlük (genellikle 2 Å veya daha iyi).\n- Dezavantajı: Kristal büyütmek zordur ve bazı proteinler kristallenmez.\n\n\n6.4.1.2 Nükleer Manyetik Rezonans (NMR) Spektroskopisi\nNMR, çözeltideki proteinlerin yapısını belirlemeye yarar. Atom çekirdekleri arasındaki manyetik etkileşimler ölçülür ve bunlardan uzaysal kısıtlamalar elde edilir.\n- Avantajı: Kristalleşme gerektirmez, proteinin doğal ortamına daha yakındır.\n- Dezavantajı: Genellikle 40 kDa altındaki proteinler için uygundur.\n\n\n6.4.1.3 Kriyo-Elektron Mikroskopisi (Kriyo-EM)\nSon yıllarda büyük bir atılım yapan Kriyo-EM, özellikle büyük makromoleküler komplekslerin yapısını belirlemede öne çıkmaktadır. Proteinler hızlıca dondurulur ve elektron mikroskobu ile görüntülenir.\n- Avantajı: Kristalleşme gerekmez, büyük komplekslerde başarılıdır.\n- Dezavantajı: Küçük proteinlerde çözünürlük sınırlı olabilir.\n\n\n\n6.4.2 Teorik Yöntemler\n\n6.4.2.1 Homoloji Modellemesi\nEğer hedef proteine benzer bir proteinin yapısı biliniyorsa, bu yapı şablon olarak kullanılarak hedef proteinin olası yapısı tahmin edilir.\n- Avantajı: Güvenilir şablon olduğunda iyi sonuç verir.\n- Dezavantajı: Şablon bulunmadığında sınırlıdır.\n\n\n6.4.2.2 Ab initio (de novo) Modelleme\nProtein yapısı tamamen diziden yola çıkarak tahmin edilmeye çalışılır. Fiziksel prensipler veya istatistiksel yaklaşımlar kullanılır.\n- Avantajı: Şablon gerektirmez.\n- Dezavantajı: Özellikle büyük proteinlerde halen zorluklar vardır.\n\n\n6.4.2.3 Yapay Zekâ Tabanlı Yöntemler\nSon dönemde AlphaFold ve benzeri yapay zekâ tabanlı yöntemler, protein yapısı tahmininde çığır açmıştır. Bu sistemler, devasa protein veri tabanlarından öğrenilen bilgileri kullanarak oldukça doğru tahminler yapabilmektedir.\nSonuç olarak, protein yapısını belirleme çalışmaları, biyoinformatik ile yapısal biyolojinin kesişiminde yer almaktadır. Deneysel yöntemler atomik ayrıntıyı verirken, teorik yöntemler hız ve esneklik sağlar. Bu iki yaklaşımın birlikteliği, günümüzde protein biliminin en güçlü araçlarından birini oluşturmaktadır.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html#protein-veri-tabanları",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html#protein-veri-tabanları",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "6.5 Protein Veri Tabanları",
    "text": "6.5 Protein Veri Tabanları\nProteinler için en temel deneysel veri kaynağı Protein Databank’tir. Ancak, milyonlarca protein içeren AlphaFold veritabanı da deneysel yapısı bilinmeyen proteinler için oldukça iyi bir başlangıç noktasıdır.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/01-amino-acids-and-proteins.html#özet",
    "href": "chapters/appendices/01-amino-acids-and-proteins.html#özet",
    "title": "6  Ek 1: Amino Asitler ve Proteinler",
    "section": "6.6 Özet",
    "text": "6.6 Özet\n\nAmino asitler ortak bir omurga üzerinde farklı R grupları ile kimyasal çeşitlilik sunar.\n\nBirincil yapı sekansı, ikincil yapı yerel motifleri, tersiyer yapı tek zincirin 3B katlanmasını ve kuaterner yapı çoklu alt birimlerin montajını ifade eder.\n\nBu hiyerarşi; katlanma, stabilite ve işlev arasındaki ilişkiyi anlamanın anahtarıdır.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Ek 1: Amino Asitler ve Proteinler</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html",
    "href": "chapters/appendices/02-md-forcefields.html",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "",
    "text": "7.1 Giriş\nMoleküler dinamik (MD) simülasyonları, proteinlerin ve diğer biyomoleküllerin atomik düzeydeki hareketlerini zaman içinde modellemek için kullanılan güçlü hesaplamalı yöntemlerdir. Bu simülasyonlarda temel amaç, Newton mekaniği yasalarına dayanarak atomların konumlarını ve hızlarını belirli zaman adımları boyunca güncellemektir. Ancak atomlar arası etkileşimlerin doğrudan kuantum mekaniği ile hesaplanması çok pahalı olduğundan, empirik kuvvet alanları (force fields) geliştirilmiştir. Kuvvet alanı, sistemdeki atomlar arasındaki potansiyel enerjiyi tanımlayan matematiksel fonksiyonlar ve parametreler bütünüdür.\nProteinlerin simülasyonunda kullanılan kuvvet alanları, hem kovalent bağların özelliklerini hem de bağsız (non‑bonded) etkileşimleri tanımlar. Doğru bir kuvvet alanı seçimi, simülasyon sonuçlarının deneysel verilerle uyumlu olabilmesi için kritik öneme sahiptir.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html#kuvvet-alanlarının-genel-yapısı",
    "href": "chapters/appendices/02-md-forcefields.html#kuvvet-alanlarının-genel-yapısı",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "7.2 Kuvvet Alanlarının Genel Yapısı",
    "text": "7.2 Kuvvet Alanlarının Genel Yapısı\nTipik bir biyomoleküler kuvvet alanı, potansiyel enerji fonksiyonunu şu bileşenlere ayırır:\n\\[\nE_{total} = E_{bond} + E_{angle} + E_{dihedral} + E_{nonbonded}\n\\]\n\n7.2.1 Bağ (Bond) terimi\nAtom çiftleri arasındaki kovalent bağların uzamasını harmonik yay modeli ile tanımlar:\n\\[\nE_{bond} = \\sum k_b (r - r_0)^2\n\\]\nBurada \\(k_b\\) bağ kuvvet sabiti, \\(r\\) anlık bağ uzunluğu ve \\(r_0\\) denge bağ uzunluğudur.\n\n\n7.2.2 Açı (Angle) terimi\nÜç atom arasındaki bağ açıları için harmonik yaklaşım kullanılır:\n\\[\nE_{angle} = \\sum k_\\theta (\\theta - \\theta_0)^2\n\\]\n\n\n7.2.3 Dihedral (Torsiyon) terimi\nDört atomdan oluşan zincirlerde dönme bariyerlerini tanımlar:\n\\[\nE_{dihedral} = \\sum V_n [1 + \\cos(n\\phi - \\gamma)]\n\\]\nBurada \\(V_n\\) dönme bariyeri yüksekliği, \\(n\\) periyod, \\(\\phi\\) torsiyon açısı ve \\(\\gamma\\) faz kaymasıdır.\n\n\n7.2.4 Bağsız (Non‑bonded) etkileşimler\nVan der Waals ve elektrostatik etkileşimleri içerir. Genelde Lennard–Jones potansiyeli ve Coulomb yasası ile ifade edilir:\n\\[\nE_{nonbonded} = \\sum\\left[ \\frac{A}{r^{12}} - \\frac{B}{r^6} + \\frac{q_i q_j}{4\\pi \\varepsilon_0 r_{ij}} \\right]\n\\]\nBurada \\(A\\) ve \\(B\\) Lennard–Jones sabitleri, \\(q_i\\) ve \\(q_j\\) kısmi yüklerdir.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html#protein-simülasyonlarında-kullanılan-başlıca-kuvvet-alanları",
    "href": "chapters/appendices/02-md-forcefields.html#protein-simülasyonlarında-kullanılan-başlıca-kuvvet-alanları",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "7.3 Protein Simülasyonlarında Kullanılan Başlıca Kuvvet Alanları",
    "text": "7.3 Protein Simülasyonlarında Kullanılan Başlıca Kuvvet Alanları\nYukarıdaki denklemlerde bir sürü sabit parametre olduğunu gördük. Örneğin bağ enerjisini hesaplamak için \\(k_b\\) terimini bilmek gerekir. İki amino birbirine bağlayan C ve N atomları arasındaki peptid bağı için \\(k_b(C-N)\\) değerini nereden elde edeceğiz? Kuvvet alanlarını buna benzer sabitlerin bulunduğu veri setleri olarak değerlendirebiliriz. Biyomoleküllerin MD simülasyonlarında yaygın olarak -kendi içinde tutarlı- bazı veri setleri, bir başka deyişle kuvvet alanları aşağıda tanıtılacaktır.\n\n7.3.1 AMBER\nAMBER (Assisted Model Building with Energy Refinement) aile kuvvet alanları proteinler, nükleik asitler ve ligandlar için yaygın olarak kullanılır. Öne çıkan versiyonlar: ff14SB, ff19SB. Ligand parametrizasyonu için GAFF (General AMBER Force Field) ve kısmi yük hesapları için RESP veya AM1‑BCC yöntemleri tercih edilir.\n\n\n7.3.2 CHARMM\nCHARMM kuvvet alanı geniş kapsamlı parametre setleri sunar (protein, lipid, karbonhidrat vb.). CHARMM36m membran proteinleri ve lipid‑protein etkileşimleri için sık tercih edilen bir versiyondur.\n\n\n7.3.3 OPLS\nOPLS‑AA organik moleküllerin sıvı özelliklerini doğru tahmin etmesi ile bilinir; biyomoleküler simülasyonlarda da kullanılır.\n\n\n7.3.4 GROMOS\nGROMOS serisi, özellikle Avrupa kökenli birçok çalışmada tercih edilen klasik kuvvet alanıdır.\n\n\n7.3.5 Yeni Nesil Kuvvet Alanları\n\nPolarizable force fields (AMOEBA vb.): Elektron bulutunun polarizasyonunu hesaba katarak daha doğru elektrostatik modelleme sağlar.\nML tabanlı potansiyeller: Derin öğrenme ve makine öğrenmesi yöntemleriyle kuantum hesaplamalarına yaklaşıcı potansiyeller geliştirilmektedir.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html#kuvvet-alanı-seçiminde-dikkat-edilecek-noktalar",
    "href": "chapters/appendices/02-md-forcefields.html#kuvvet-alanı-seçiminde-dikkat-edilecek-noktalar",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "7.4 Kuvvet Alanı Seçiminde Dikkat Edilecek Noktalar",
    "text": "7.4 Kuvvet Alanı Seçiminde Dikkat Edilecek Noktalar\n\nProtein tipi: Membran proteinleri için CHARMM36; çözünür globüler proteinler için AMBER ff19SB gibi kombinasyonlar uygun olabilir.\nSu modeli: Kuvvet alanına uygun bir su modeli seçilmelidir (ör. TIP3P, TIP4P‑EW, OPC). Su modeli, özellikle protein yüzeyi ve iyon dağılımı üzerinde belirgin etkiler yapar.\nİyonlar ve konsantrasyon: İyon parametrizasyonu ve iyon konsantrasyonu (NaCl, KCl) biyolojik koşulları yansıtmalıdır.\nLigand/kofaktör parametrizasyonu: Antechamber (AMBER), CGenFF (CHARMM) gibi araçlarla ligand parametreleri çıkarılmalıdır.\nPolarizasyon gereksinimi: Yüksek doğruluk gereken hesaplamalarda polarizable kuvvet alanları düşünülmelidir.\nSimülasyon amaçları: Katlanma, bağlanma serbest enerjisi hesapları, uzun zaman ölçeği dinamikleri gibi farklı amaçlar farklı yaklaşımlar gerektirir.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html#sık-yapılan-hatalar-ve-öneriler",
    "href": "chapters/appendices/02-md-forcefields.html#sık-yapılan-hatalar-ve-öneriler",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "7.5 Sık Yapılan Hatalar ve Öneriler",
    "text": "7.5 Sık Yapılan Hatalar ve Öneriler\n\nKuvvet alanı ile uyumsuz su modeli kullanmak.\nLigand parametrizasyonunu ihmal etmek veya hatalı parametre kullanmak.\nKısa dengeleme süreleriyle üretime geçmek.\nKesme (cutoff) ve uzun menzilli etkileşimler için uygun algoritmalar (PME vb.) kullanmamak.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/02-md-forcefields.html#özet",
    "href": "chapters/appendices/02-md-forcefields.html#özet",
    "title": "7  Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları",
    "section": "7.6 Özet",
    "text": "7.6 Özet\nKuvvet alanları, MD simülasyonlarının temelini oluşturur. AMBER, CHARMM ve OPLS gibi klasik kuvvet alanları günümüzde yaygın olarak kullanılmakta; ancak polarizable kuvvet alanları ve makine öğrenmesi tabanlı yaklaşımlar daha yüksek doğruluk vaat etmektedir. Simülasyonun amacına göre uygun kuvvet alanı, su modeli ve parametrizasyon stratejisi seçilmesi simülasyonun başarısı için kritik önemdedir.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ek 2: Protein Moleküler Dinamik Simülasyonlarında Kuvvet Alanları</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html",
    "href": "chapters/appendices/03-bash-commands.html",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "",
    "text": "8.1 Giriş\nMoleküler dinamik simülasyonları gibi hesaplamalı çalışmalar yapılırken komut satırı kullanımı vazgeçilmezdir. Linux/Unix tabanlı sistemlerde Bash (Bourne Again Shell), en yaygın kullanılan kabuk (shell) ortamıdır. Ubuntu ve Mac OS’ta komut satırını kullanabilmek için Terminal adındaki uygulamaya başlatmak zorundasınız. Terminal komutlarını çalıştırmak ilk başta size zor gelse de uzun vadede işlerinizi inanılmaz kolaylaştıracaktır. Aşağıda günlük işlerde sıkça kullanılan temel Bash komutları özetlenmiştir.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#dosya-ve-dizin-işlemleri",
    "href": "chapters/appendices/03-bash-commands.html#dosya-ve-dizin-işlemleri",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.2 Dosya ve Dizin İşlemleri",
    "text": "8.2 Dosya ve Dizin İşlemleri\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\npwd\nBulunduğunuz dizini gösterir\npwd\n\n\nls\nDizin içeriğini listeler\nls -l\n\n\ncd\nDizin değiştirir\ncd simulations/\n\n\nmkdir\nYeni dizin oluşturur\nmkdir data\n\n\nrm\nDosya veya dizin siler\nrm file.txt, rm -r old_dir",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#dosya-görüntüleme",
    "href": "chapters/appendices/03-bash-commands.html#dosya-görüntüleme",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.3 Dosya Görüntüleme",
    "text": "8.3 Dosya Görüntüleme\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\ncat\nDosya içeriğini görüntüler\ncat notes.txt\n\n\nless\nUzun dosyaları sayfa sayfa gösterir\nless results.log\n\n\nhead\nİlk satırları görüntüler\nhead -n 20 data.txt\n\n\ntail\nSon satırları görüntüler\ntail -f log.txt",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#kopyalama-ve-taşıma",
    "href": "chapters/appendices/03-bash-commands.html#kopyalama-ve-taşıma",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.4 Kopyalama ve Taşıma",
    "text": "8.4 Kopyalama ve Taşıma\n\n\n\n\n\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\ncp\nDosya veya dizin kopyalar\ncp file1.txt backup.txt\n\n\nmv\nDosya veya dizin taşır/yeniden adlandırır\nmv old.txt new.txt",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#arama-ve-filtreleme",
    "href": "chapters/appendices/03-bash-commands.html#arama-ve-filtreleme",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.5 Arama ve Filtreleme",
    "text": "8.5 Arama ve Filtreleme\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\ngrep\nDosyada metin arar\ngrep \"ERROR\" log.txt\n\n\nfind\nDosya/dizin arar\nfind . -name \"*.pdb\"\n\n\nwc\nSatır, kelime, karakter sayar\nwc -l data.txt",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#süreç-ve-kaynak-yönetimi",
    "href": "chapters/appendices/03-bash-commands.html#süreç-ve-kaynak-yönetimi",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.6 Süreç ve Kaynak Yönetimi",
    "text": "8.6 Süreç ve Kaynak Yönetimi\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\nps\nÇalışan süreçleri listeler\nps aux\n\n\ntop\nGerçek zamanlı süreç takibi\ntop\n\n\nkill\nBelirtilen süreci sonlandırır\nkill 12345",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#dosya-aktarımı",
    "href": "chapters/appendices/03-bash-commands.html#dosya-aktarımı",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.7 Dosya Aktarımı",
    "text": "8.7 Dosya Aktarımı\n\n\n\n\n\n\n\n\nKomut\nAçıklama\nÖrnek\n\n\n\n\nscp\nDosyayı uzak makineye kopyalar\nscp file.txt user@server:/home/user/\n\n\nrsync\nSenkronize kopyalama yapar\nrsync -av data/ backup/",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#program-kurma",
    "href": "chapters/appendices/03-bash-commands.html#program-kurma",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.8 Program Kurma",
    "text": "8.8 Program Kurma\nUbuntu ve türevi işletim sistemlerin program kurmanın en kolay yolu program adının önüne sudo apt install yazmaktır. Örneğin Gromacs programını kurmak için sudo apt install gromacs yazmak yeterli olur. Burada Gromacs kelimesinin ve komuttaki öteki harflerin küçük olduğuna dikkat etmek gerekir. Program, Ubuntu veri tabanlarında mevcutsa işletim sistemi sizden yönetici şifresini soracak ve sonra programı kuracaktır.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#alıştırmalar",
    "href": "chapters/appendices/03-bash-commands.html#alıştırmalar",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.9 Alıştırmalar",
    "text": "8.9 Alıştırmalar\n\n\n\n\n\n\nNot\n\n\n\n\nBulunduğunuz dizinin tam yolunu yazdırın.\n💡 İpucu: pwd\n\nBir dizindeki .pdb uzantılı dosyaların sayısını bulun.\n💡 İpucu: ls *.pdb | wc -l\n\nsimulation.log adlı dosyanın son 20 satırını ekranda gösterin.\n💡 İpucu: tail -n 20 simulation.log\n\ndata/ klasörünü backup/ klasörüne kopyalayın.\n💡 İpucu: cp -r data backup\n\nlog.txt dosyasında “ERROR” geçen satırların sayısını bulun.\n💡 İpucu: grep -c \"ERROR\" log.txt\npdb2pqr programını kurun.\n💡 İpucu: sudo apt .........",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "chapters/appendices/03-bash-commands.html#sonuç",
    "href": "chapters/appendices/03-bash-commands.html#sonuç",
    "title": "8  Ek 1: Bash Komut Satırı",
    "section": "8.10 Sonuç",
    "text": "8.10 Sonuç\nBu komutlar, günlük kullanımda en çok ihtiyaç duyulan Bash araçlarıdır. Moleküler dinamik simülasyonlarının kurulumu ve analizi sırasında bu komutların bilinmesi, iş akışlarını büyük ölçüde hızlandırır.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ek 1: Bash Komut Satırı</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "9  Kaynaklar",
    "section": "",
    "text": "9.1 Ders Kitapları",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Kaynaklar</span>"
    ]
  },
  {
    "objectID": "references.html#ders-kitapları",
    "href": "references.html#ders-kitapları",
    "title": "9  Kaynaklar",
    "section": "",
    "text": "Frenkel, D., & Smit, B. (2001). Understanding Molecular Simulation.\n\n\n\n\n\n\n\nNot\n\n\n\nNisbeten eski bir kitap. Hala C ile örnekler içeriyor.\n\n\n\nRapaport, D. C. (2004). The Art of Molecular Dynamics Simulation.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Kaynaklar</span>"
    ]
  },
  {
    "objectID": "references.html#derleme-makaleler",
    "href": "references.html#derleme-makaleler",
    "title": "9  Kaynaklar",
    "section": "9.2 Derleme Makaleler",
    "text": "9.2 Derleme Makaleler\n\nHollingsworth, S. A., & Dror, R. O. (2018). Molecular dynamics simulation for all. Neuron, 99(6), 1129-1143.\nKarplus, M., & McCammon, J. A. (2002). Molecular dynamics simulations of biomolecules. Nature structural biology, 9(9), 646-652.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Kaynaklar</span>"
    ]
  }
]